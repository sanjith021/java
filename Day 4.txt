
class Shoppingitems{
	void additems(String item_name,int price) {
		System.out.println(" Item name is: "+item_name+"fixed price: "+price);
	}
	void additems(String item_name,int price,int item_quantity) {
		int totalprice=price*item_quantity;
		System.out.println(" Item name is: "+item_name+"Quantity: "+item_quantity+"Total: "+totalprice);
	}
    void additems(String item_name,int price,int item_quantity,int discount) {
    	int totalPrice = price * item_quantity; 
        double discountAmount = (discount / 100.0) * totalPrice;  
        double finalPrice = totalPrice - discountAmount;  
        
        System.out.println(" Item name is: " + item_name + 
                           " Quantity: " + item_quantity + 
                           " Total (Before Discount): " + totalPrice + 
                           " Discount: " + discount + "%" + 
                           " Final price after discount: " + finalPrice);
	}
}

public class Shoppingcart {
	public static void main(String[] args) {
		Shoppingitems ref = new Shoppingitems();
		ref.additems("Monitor", 20000);
		ref.additems("Keyboard",1000,2);
		ref.additems("Mouse",100,2,50);
		
	}

}

class Topayvia{
	void pay(int amount) {
		System.out.println("In hand amount: "+amount);
	}
}

class CreditUpi extends Topayvia{
	void pay(int amount) {
		System.out.println("Upipayment "+amount);
	}
	
}

class Gpay extends Topayvia{
	void pay(int amount) {
		System.out.println("Gpay "+amount);
	}
}

public class Paymentprocessing {
	public static void main(String[] args) {
		Topayvia ref;
        ref = new CreditUpi();
        ref.pay(2000);
        
        ref = new Gpay();
        ref.pay(3000);
	}
}	






Syntax:

interface interfacename{
		//variable
		static int a=10;
		final int b=10;
		//method
		default void methodname(){
		
		}
		abstract void methodname(){
		
		}
}

abstract class Animal {
	//Abstract method(no implementation)
	abstract void sound();
	
	//Regular method
	void sleep() {
		System.out.println("Sleeping");
	}
}

public class Empsalary {
	
	
	public double Calculatesalary(double fixedsalary) {
		return fixedsalary;
	}
	
	public double Calculatesalary(int hoursworked,double hourlyrate) {
		return hoursworked * hourlyrate;
	}
	
	public double Calculatesalary(int hoursworked, double hourlyrate, double bonus) {
		return(hoursworked * hourlyrate) + bonus;
	}
	
	public static void main(String[] args) {
		Empsalary salarycalculator = new Empsalary();
		
		double fulltimesalary = salarycalculator.Calculatesalary(2000.00);
		System.out.println("Full-time employee salary: $"+fulltimesalary);
		
		double parttimesalary = salarycalculator.Calculatesalary(30, 10.05);
		System.out.println("Part-time employee salary: $"+parttimesalary);
		
		double freelancersalary = salarycalculator.Calculatesalary(20,15.07,100.00);
		System.out.println("Freelancer salary: $"+freelancersalary);
	}
}

public class Main1 {
	public static void main(String[] args) {
		try {
			int num=10/0;
		}catch(ArithmeticException e) {
			System.out.println("Cannot divide by zero:"+e.getMessage());
	}finally {
		System.out.println("Execution completed");
	}
}
}
  

	
